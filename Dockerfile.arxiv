# Multi-stage build for arxiv-mcp-server
FROM python:3.13-slim as builder

# Install uv package manager
COPY --from=ghcr.io/astral-sh/uv:latest /uv /usr/local/bin/uv

# Set working directory
WORKDIR /app

# Clone the arxiv-mcp-server repository
RUN apt-get update && apt-get install -y git && \
    git clone https://github.com/prashalruchiranga/arxiv-mcp-server.git . && \
    rm -rf .git

# Create virtual environment and install dependencies
RUN uv venv /app/.venv && \
    uv pip install -r pyproject.toml

# Production stage
FROM python:3.13-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app user
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Set working directory
WORKDIR /app

# Copy virtual environment from builder
COPY --from=builder /app/.venv /app/.venv
COPY --from=builder /app /app

# Create downloads directory with proper permissions
RUN mkdir -p /app/downloads && \
    chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Set environment variables
ENV PATH="/app/.venv/bin:$PATH"
ENV PYTHONPATH="/app/src"
ENV DOWNLOAD_PATH="/app/downloads"

# Expose the port the server will run on
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import sys; sys.path.insert(0, '/app/src'); from arxiv_server.server import main; print('Server is healthy')" || exit 1

# Command to run the server
CMD ["python", "-m", "arxiv_server.server"]
